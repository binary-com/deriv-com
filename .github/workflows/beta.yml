name: Release Beta

on:
    push:
        branches:
            - translation-beta
        paths-ignore:
            - '**.md'

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    GATSBY_CPU_COUNT: 2
    GATSBY_ENV: production
    NODE_OPTIONS: '--max_old_space_size=7168'
    GATSBY_DATADOG_APPLICATION_ID: ${{ secrets.GATSBY_DATADOG_APPLICATION_ID }}
    GATSBY_DATADOG_CLIENT_TOKEN: ${{ secrets.GATSBY_DATADOG_CLIENT_TOKEN }}
    GATSBY_MAP_API_KEY: ${{ secrets.GATSBY_MAP_API_KEY }}
    GATSBY_GROWTHBOOK_CLIENT_KEY: ${{ secrets.GATSBY_GROWTHBOOK_CLIENT_KEY }}
    GATSBY_GROWTHBOOK_DECRYPTION_KEY: ${{ secrets.GATSBY_GROWTHBOOK_DECRYPTION_KEY }}
    GATSBY_RUDDERSTACK_STAGING_KEY: ${{ secrets.GATSBY_RUDDERSTACK_STAGING_KEY }}
    GATSBY_RUDDERSTACK_PRODUCTION_KEY: ${{ secrets.GATSBY_RUDDERSTACK_PRODUCTION_KEY }}
    GATSBY_GOOGLE_TAG_MANAGER_TRACKING_ID: ${{ secrets.GATSBY_GOOGLE_TAG_MANAGER_TRACKING_ID }}
    GATSBY_HOTJAR_ID: ${{ secrets.GATSBY_HOTJAR_ID }}
    GATSBY_DATABASE_URL: ${{ secrets.GATSBY_DATABASE_URL }}

jobs:
    release-beta:
        timeout-minutes: 30
        runs-on: Runner_16cores
        environment: production
        steps:
            - name: Checkout üõéÔ∏è
              uses: actions/checkout@v2.3.1

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: '18.x'
                  cache: 'npm'

            - name: Create npmrc file
              shell: bash
              run: echo "@deriv-com:registry=https://npm.pkg.github.com" >> .npmrc

            - name: Setup install read-only token for deriv-com org
              shell: bash
              run: echo '//npm.pkg.github.com/:_authToken=${{ secrets.READ_DERIV_COM_ORG_PACKAGES }}' >> .npmrc

            - run: npm ci
            # - run: npm run format
            # - run: npm run test
            - run: npm run build
            - uses: olegtarasov/get-tag@53af8e1e538a0ffab949cdde3e332d8e58e8630f
              id: tagName
              # For using same tag for staging and production we need to uncomment these two below lines:
              # with:
              #   tagRegex: "staging(.*)"

            - name: Deploy to Cloudflare ‚òÅÔ∏è
              uses: cloudflare/wrangler-action@2.0.0
              with:
                  apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
                  command: pages deploy public --project-name=deriv-com-pages --branch=beta

            - name: Cloudflare preview link ‚ú®
              run: echo "New beta website - https://beta.deriv.com"

            - name: Slack Notification üì£
              uses: 8398a7/action-slack@21dc5d142b92115d9c154540e48df504ad4e9cf9
              with:
                  status: ${{ job.status }}
                  fields: workflow,repo
                  if_mention: failure,cancelled
                  custom_payload: |
                      {
                        attachments: [{
                          color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                          text: `Release for *Deriv.com* with version *$GITHUB_SHA*`
                        }]
                      }
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
              if: always()
